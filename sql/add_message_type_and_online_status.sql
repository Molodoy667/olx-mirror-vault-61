-- üí¨ –û–ù–û–í–õ–ï–ù–ù–Ø –°–ò–°–¢–ï–ú–ò –ü–û–í–Ü–î–û–ú–õ–ï–ù–¨
-- –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–∏–ø—ñ–≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —Ç–∞ –æ–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å—É

-- 1. –î–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ–ª—è message_type –¥–æ —Ç–∞–±–ª–∏—Ü—ñ messages
ALTER TABLE messages 
ADD COLUMN IF NOT EXISTS message_type VARCHAR(10) DEFAULT 'general';

-- –î–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ–º–µ–Ω—Ç–∞—Ä—è
COMMENT ON COLUMN messages.message_type IS '–¢–∏–ø –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: buying (–ø–æ–∫—É–ø–∫–∞), selling (–ø—Ä–æ–¥–∞–∂), general (–∑–∞–≥–∞–ª—å–Ω–µ)';

-- 2. –û–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –Ω–∞ –æ—Å–Ω–æ–≤—ñ –ª–æ–≥—ñ–∫–∏ –≤–ª–∞—Å–Ω–æ—Å—Ç—ñ –æ–≥–æ–ª–æ—à–µ–Ω—å
UPDATE messages 
SET message_type = CASE 
  WHEN listing_id IS NOT NULL THEN
    CASE 
      WHEN EXISTS (
        SELECT 1 FROM listings 
        WHERE listings.id = messages.listing_id 
        AND listings.user_id = messages.receiver_id
      ) THEN 'buying'  -- –ü–∏—à—É—Ç—å –≤–ª–∞—Å–Ω–∏–∫—É –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è (—Ö–æ—á—É—Ç—å –∫—É–ø–∏—Ç–∏)
      WHEN EXISTS (
        SELECT 1 FROM listings 
        WHERE listings.id = messages.listing_id 
        AND listings.user_id = messages.sender_id
      ) THEN 'selling' -- –í–ª–∞—Å–Ω–∏–∫ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î (–ø—Ä–æ–¥–∞—î)
      ELSE 'general'
    END
  ELSE 'general'
END
WHERE message_type = 'general' OR message_type IS NULL;

-- 3. –î–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ–ª—ñ–≤ –æ–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å—É –¥–æ —Ç–∞–±–ª–∏—Ü—ñ users (—è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—é—Ç—å)
ALTER TABLE auth.users 
ADD COLUMN IF NOT EXISTS is_online BOOLEAN DEFAULT FALSE;

ALTER TABLE auth.users 
ADD COLUMN IF NOT EXISTS last_seen TIMESTAMP WITH TIME ZONE DEFAULT now();

-- 4. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –æ–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å—É
CREATE OR REPLACE FUNCTION update_user_online_status(user_uuid UUID, is_online_status BOOLEAN)
RETURNS VOID AS $$
BEGIN
  UPDATE auth.users 
  SET 
    is_online = is_online_status,
    last_seen = CASE 
      WHEN is_online_status = FALSE THEN now()
      ELSE last_seen
    END
  WHERE id = user_uuid;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- 5. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç—Ä–∏–≥–µ—Ä–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è last_seen
CREATE OR REPLACE FUNCTION update_last_seen()
RETURNS TRIGGER AS $$
BEGIN
  -- –û–Ω–æ–≤–ª—é—î–º–æ last_seen –ø—Ä–∏ –±—É–¥—å-—è–∫—ñ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
  UPDATE auth.users 
  SET last_seen = now()
  WHERE id = NEW.sender_id;
  
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- –î–æ–¥–∞—î–º–æ —Ç—Ä–∏–≥–µ—Ä –Ω–∞ –≤—Å—Ç–∞–≤–∫—É –Ω–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
DROP TRIGGER IF EXISTS update_sender_last_seen ON messages;
CREATE TRIGGER update_sender_last_seen
  AFTER INSERT ON messages
  FOR EACH ROW
  EXECUTE FUNCTION update_last_seen();

-- 6. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è view –¥–ª—è –∑—Ä—É—á–Ω–æ–≥–æ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–æ–∑–º–æ–≤
CREATE OR REPLACE VIEW user_conversations AS
SELECT DISTINCT
  CASE 
    WHEN m.sender_id = u.id THEN m.receiver_id
    ELSE m.sender_id
  END as other_user_id,
  u.id as current_user_id,
  m.message_type,
  m.listing_id,
  l.title as listing_title,
  l.price as listing_price,
  (
    SELECT content 
    FROM messages m2 
    WHERE (m2.sender_id = u.id AND m2.receiver_id = CASE WHEN m.sender_id = u.id THEN m.receiver_id ELSE m.sender_id END)
       OR (m2.receiver_id = u.id AND m2.sender_id = CASE WHEN m.sender_id = u.id THEN m.receiver_id ELSE m.sender_id END)
    ORDER BY m2.created_at DESC 
    LIMIT 1
  ) as last_message,
  (
    SELECT created_at 
    FROM messages m2 
    WHERE (m2.sender_id = u.id AND m2.receiver_id = CASE WHEN m.sender_id = u.id THEN m.receiver_id ELSE m.sender_id END)
       OR (m2.receiver_id = u.id AND m2.sender_id = CASE WHEN m.sender_id = u.id THEN m.receiver_id ELSE m.sender_id END)
    ORDER BY m2.created_at DESC 
    LIMIT 1
  ) as last_message_time,
  (
    SELECT COUNT(*)
    FROM messages m2 
    WHERE m2.sender_id = CASE WHEN m.sender_id = u.id THEN m.receiver_id ELSE m.sender_id END
      AND m2.receiver_id = u.id
      AND m2.is_read = FALSE
  ) as unread_count
FROM messages m
JOIN auth.users u ON u.id = auth.uid()
LEFT JOIN listings l ON l.id = m.listing_id
WHERE m.sender_id = u.id OR m.receiver_id = u.id;

-- 7. –ù–∞–¥–∞–Ω–Ω—è –ø—Ä–∞–≤ –Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞ view
GRANT EXECUTE ON FUNCTION update_user_online_status(UUID, BOOLEAN) TO authenticated;
GRANT SELECT ON user_conversations TO authenticated;

-- 8. RLS –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—è
-- (RLS –≤–∂–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ñ messages, –Ω–æ–≤–µ –ø–æ–ª–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–∞—Ö–∏—â–µ–Ω–æ)

SELECT '–°–∏—Å—Ç–µ–º–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –æ–Ω–æ–≤–ª–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ! üí¨' as status,
       '–î–æ–¥–∞–Ω–æ —Ç–∏–ø–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —Ç–∞ –æ–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å! ‚úÖ' as message;