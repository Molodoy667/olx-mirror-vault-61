name: üì± Build Novado APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      
    - name: üì¶ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: üìã Install dependencies
      run: npm install --legacy-peer-deps
      
    - name: üèóÔ∏è Build PWA
      run: npm run build
      
    - name: ‚òï Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: ü§ñ Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: üîß Setup Gradle 8.2
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: '8.2'
        
    - name: üì± Accept Android licenses
      run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
      
    - name: üì± Install Android build tools
      run: |
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "build-tools;34.0.0"
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-34"
        
    - name: ‚öôÔ∏è Create Android project
      run: |
        npx cap add android
        npx cap sync android
        
    - name: üîß Update Gradle wrapper to 8.2
      run: |
        cd android
        
        # Update gradle-wrapper.properties to use Gradle 8.2
        echo "distributionBase=GRADLE_USER_HOME" > gradle/wrapper/gradle-wrapper.properties
        echo "distributionPath=wrapper/dists" >> gradle/wrapper/gradle-wrapper.properties
        echo "distributionUrl=https\\://services.gradle.org/distributions/gradle-8.2-all.zip" >> gradle/wrapper/gradle-wrapper.properties
        echo "zipStoreBase=GRADLE_USER_HOME" >> gradle/wrapper/gradle-wrapper.properties
        echo "zipStorePath=wrapper/dists" >> gradle/wrapper/gradle-wrapper.properties
        
        chmod +x gradlew
        
        echo "‚úÖ Gradle wrapper updated to 8.2"
        
    - name: üèóÔ∏è Build APK
      run: |
        cd android
        ./gradlew assembleDebug
        
    - name: üìã Get version
      id: version
      run: echo "VERSION=$(date +'%Y.%m.%d.%H%M')" >> $GITHUB_OUTPUT
      
    - name: üì¶ Prepare APK for download
      run: |
        # Copy APK to easy access location
        cp android/app/build/outputs/apk/debug/app-debug.apk novado-v${{ steps.version.outputs.VERSION }}.apk
        
        echo "‚úÖ APK –≥–æ—Ç–æ–≤–∏–π –¥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è:"
        ls -la novado-v${{ steps.version.outputs.VERSION }}.apk
        
        echo "üì± –†–æ–∑–º—ñ—Ä APK:"
        du -sh novado-v${{ steps.version.outputs.VERSION }}.apk
        
    - name: üì§ Upload APK as artifact
      uses: actions/upload-artifact@v4
      with:
        name: novado-apk-v${{ steps.version.outputs.VERSION }}
        path: novado-v${{ steps.version.outputs.VERSION }}.apk
        retention-days: 30
        
    - name: üìã Build success summary
      run: |
        echo "üéâ NOVADO APK –ó–ë–£–î–û–í–ê–ù–û –£–°–ü–Ü–®–ù–û!"
        echo "================================"
        echo "üìÖ –í–µ—Ä—Å—ñ—è: v${{ steps.version.outputs.VERSION }}"
        echo "üì± –ù–∞–∑–≤–∞: Novado"
        echo "üá∫üá¶ –°–ª–æ–≥–∞–Ω: –ë–µ–∑–ª—ñ—á –æ–≥–æ–ª–æ—à–µ–Ω—å —á–µ–∫–∞—é—Ç—å –Ω–∞ —Ç–µ–±–µ"
        echo ""
        echo "üì• –Ø–ö –ó–ê–í–ê–ù–¢–ê–ñ–ò–¢–ò APK:"
        echo "1. GitHub ‚Üí Actions ‚Üí –¶–µ–π workflow"
        echo "2. –ü—Ä–æ–∫—Ä—É—Ç—ñ—Ç—å –≤–Ω–∏–∑ –¥–æ 'Artifacts'"
        echo "3. –ö–ª—ñ–∫–Ω—ñ—Ç—å 'novado-apk-v${{ steps.version.outputs.VERSION }}'"
        echo "4. –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ ZIP —Ç–∞ —Ä–æ–∑–ø–∞–∫—É–π—Ç–µ APK"
        echo ""
        echo "üì± –Ø–ö –í–°–¢–ê–ù–û–í–ò–¢–ò:"
        echo "1. –£–≤—ñ–º–∫–Ω—ñ—Ç—å '–ù–µ–≤—ñ–¥–æ–º—ñ –¥–∂–µ—Ä–µ–ª–∞' –≤ Android"
        echo "2. –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å APK —Ñ–∞–π–ª"
        echo "3. –í—ñ–¥–∫—Ä–∏–π—Ç–µ –¥–æ–¥–∞—Ç–æ–∫ Novado"
        echo ""
        echo "‚ú® –§–£–ù–ö–¶–Ü–á –î–û–î–ê–¢–ö–£:"
        echo "- üé¨ Splash screen –∑ –∞–Ω—ñ–º–∞—Ü—ñ—î—é"
        echo "- üì± –Ü–∫–æ–Ω–∫–∞ –∑ –±—É–∫–≤–æ—é N"
        echo "- üîÑ –ê–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è"
        echo "- üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π –±—Ä–µ–Ω–¥–∏–Ω–≥"