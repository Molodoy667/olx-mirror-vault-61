name: üì± Build PWA and Android APK

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README*.md'
      - 'docs/**'
  workflow_dispatch:
    inputs:
      debug:
        description: 'Enable debug output'
        required: false
        default: 'false'
        type: boolean

jobs:
  build-pwa:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      
    - name: üì¶ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: üìã Install dependencies
      run: npm install --legacy-peer-deps
      
    - name: üèóÔ∏è Build PWA
      run: npm run build
      
    - name: üì§ Upload PWA build
      uses: actions/upload-artifact@v4
      with:
        name: pwa-build
        path: dist/

  build-apk:
    needs: build-pwa
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      
    - name: üì¶ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: üì• Download PWA build
      uses: actions/download-artifact@v4
      with:
        name: pwa-build
        path: dist/
        
    - name: üìã Install dependencies
      run: npm install --legacy-peer-deps
      
    - name: üßπ Clean Capacitor cache (if needed)
      run: |
        if [ -d "android" ]; then
          echo "üßπ Cleaning existing Android build..."
          rm -rf android/app/build/
          echo "‚úÖ Android build cache cleared"
        fi
      
    - name: ‚òï Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: ü§ñ Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: üì± Accept Android SDK licenses
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
      
    - name: üîß Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: '8.0.2'
      
    - name: ‚öôÔ∏è Initialize Capacitor (if needed)
      run: |
        if [ ! -f "capacitor.config.ts" ]; then
          echo "üîß Initializing Capacitor..."
          npx cap init "Novado" "com.novado.app" --web-dir=dist
        else
          echo "‚úÖ Capacitor already initialized"
        fi
        
    - name: ü§ñ Add Android platform (if needed)
      run: |
        if [ ! -d "android" ]; then
          echo "üì± Adding Android platform..."
          npx cap add android
        else
          echo "‚úÖ Android platform already exists"
        fi
      
    - name: üîÑ Sync with Android
      run: |
        echo "üîÑ Syncing with Android platform..."
        npx cap sync android
      
    - name: üîç Check Android structure
      run: |
        echo "üìÅ Checking android directory structure:"
        ls -la android/ || echo "‚ùå android directory not found"
        echo "üìÅ Checking gradlew:"
        ls -la android/gradlew* || echo "‚ùå gradlew not found"
        echo "üìÅ Checking app directory:"
        ls -la android/app/ || echo "‚ùå android/app directory not found"
      
    - name: üîß Create Gradle Wrapper (if missing)
      run: |
        cd android
        if [ ! -f "./gradlew" ]; then
          echo "üîß Creating Gradle Wrapper..."
          
          # –°–æ–∑–¥–∞–µ–º build.gradle –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
          if [ ! -f "build.gradle" ]; then
            echo "üìù Creating build.gradle..."
            cat > build.gradle << 'EOF'
// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        compileSdkVersion = 34
        targetSdkVersion = 34
        minSdkVersion = 22
        cordovaAndroidVersion = '10.1.1'
        kotlin_version = '1.9.10'
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.0.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

apply from: "capacitor.settings.gradle"

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
EOF
          fi
          
          # –°–æ–∑–¥–∞–µ–º gradle.properties –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
          if [ ! -f "gradle.properties" ]; then
            echo "üìù Creating gradle.properties..."
            cat > gradle.properties << 'EOF'
# Project-wide Gradle settings.
org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8
android.useAndroidX=true
android.enableJetifier=true
EOF
          fi
          
          # –°–æ–∑–¥–∞–µ–º settings.gradle –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
          if [ ! -f "settings.gradle" ]; then
            echo "üìù Creating settings.gradle..."
            cat > settings.gradle << 'EOF'
include ':app'
include ':capacitor-cordova-android-plugins'
project(':capacitor-cordova-android-plugins').projectDir = new File('./capacitor-cordova-android-plugins/')

apply from: 'capacitor.settings.gradle'
EOF
          fi
          
          # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º gradle wrapper
          echo "üîß Initializing Gradle Wrapper..."
          gradle wrapper --gradle-version 8.0.2 --distribution-type all
          
          if [ -f "./gradlew" ]; then
            echo "‚úÖ Gradle Wrapper created successfully!"
            chmod +x ./gradlew
          else
            echo "‚ùå Failed to create Gradle Wrapper!"
            exit 1
          fi
        else
          echo "‚úÖ Gradle Wrapper already exists"
          chmod +x ./gradlew
        fi
      
    - name: üèóÔ∏è Build Android APK
      run: |
        cd android
        
        echo "üöÄ Building APK with gradlew..."
        ./gradlew assembleDebug --stacktrace --info
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–±–æ—Ä–∫–∏
        if [ -f "app/build/outputs/apk/debug/app-debug.apk" ]; then
          echo "‚úÖ APK built successfully!"
          ls -la app/build/outputs/apk/debug/
        else
          echo "‚ùå APK not found after build!"
          echo "üìÅ Checking build outputs:"
          find app/build -name "*.apk" -type f 2>/dev/null || echo "No APK files found"
          exit 1
        fi
        
    - name: üì§ Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: android/app/build/outputs/apk/debug/app-debug.apk

  release:
    needs: build-apk
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: üì• Download APK
      uses: actions/download-artifact@v4
      with:
        name: android-apk
        
    - name: üìã Get version
      id: version
      run: echo "VERSION=$(date +'%Y.%m.%d-%H%M')" >> $GITHUB_OUTPUT
      
    - name: üìù Rename APK
      run: mv app-debug.apk novado-v${{ steps.version.outputs.VERSION }}.apk
      
    - name: üöÄ Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.VERSION }}
        name: üì± Novado v${{ steps.version.outputs.VERSION }}
        body: |
          ## üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –∑–±—ñ—Ä–∫–∞ Android APK
          
          üìÖ **–í–µ—Ä—Å—ñ—è**: ${{ steps.version.outputs.VERSION }}  
          üì± **–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞**: Android  
          üîÑ **–¢–∏–ø**: Debug Build  
          
          ### üì• –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è:
          1. –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ APK —Ñ–∞–π–ª –Ω–∏–∂—á–µ
          2. –£–≤—ñ–º–∫–Ω—ñ—Ç—å "–ù–µ–≤—ñ–¥–æ–º—ñ –¥–∂–µ—Ä–µ–ª–∞" –≤ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è—Ö Android
          3. –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å APK —Ñ–∞–π–ª
          4. –í—ñ–¥–∫—Ä–∏–π—Ç–µ –¥–æ–¥–∞—Ç–æ–∫ Novado
          
          ### üîÑ –ê–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è:
          - ‚úÖ –î–æ–¥–∞—Ç–æ–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä—è—î –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
          - ‚úÖ PWA —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó –∑–∞–±–µ–∑–ø–µ—á—É—é—Ç—å –º–∏—Ç—Ç—î–≤—É —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é
          - ‚úÖ –ù–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –∑'—è–≤–ª—è—é—Ç—å—Å—è –±–µ–∑ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∏ APK
          
          ### üõ†Ô∏è –¢–µ—Ö–Ω—ñ—á–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è:
          - **PWA**: –ü—Ä–æ–≥—Ä–µ—Å–∏–≤–Ω–µ –≤–µ–±-–¥–æ–¥–∞—Ç–æ–∫ –∑ –æ—Ñ–ª–∞–π–Ω –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é
          - **Capacitor**: –ù–∞—Ç–∏–≤–Ω–∞ –æ–±–≥–æ—Ä—Ç–∫–∞ –¥–ª—è Android
          - **Supabase**: Backend —Ç–∞ –±–∞–∑–∞ –¥–∞–Ω–∏—Ö
          
        files: |
          novado-v${{ steps.version.outputs.VERSION }}.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}