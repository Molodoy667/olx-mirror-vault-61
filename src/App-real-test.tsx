import { Toaster } from "@/components/ui/toaster";
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
import { BrowserRouter, Routes, Route } from "react-router-dom";
import { ErrorBoundary } from "@/components/ErrorBoundary";
import { Suspense, lazy } from "react";
import { ScrollToTopRouter } from "@/components/ScrollToTopRouter";
import { Layout } from "@/components/Layout";
import './index.css';

// –í—Ä–µ–º–µ–Ω–Ω—ã–π AuthProvider –ë–ï–ó useNavigate –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
import React, { createContext, useContext, useEffect, useState } from 'react';
import { User, Session } from '@supabase/supabase-js';
import { supabase } from '@/integrations/supabase/client';

interface AuthContextType {
  user: User | null;
  session: Session | null;
  loading: boolean;
  signOut: () => Promise<void>;
}

const AuthContext = createContext<AuthContextType>({
  user: null,
  session: null,
  loading: true,
  signOut: async () => {},
});

const useAuth = () => useContext(AuthContext);

const SafeAuthProvider = ({ children }: { children: React.ReactNode }) => {
  const [user, setUser] = useState<User | null>(null);
  const [session, setSession] = useState<Session | null>(null);
  const [loading, setLoading] = useState(true);
  // –ù–ï –ò–°–ü–û–õ–¨–ó–£–ï–ú useNavigate –∑–¥–µ—Å—å!

  useEffect(() => {
    // Set up auth state listener FIRST
    const { data: { subscription } } = supabase.auth.onAuthStateChange(
      (event, session) => {
        setSession(session);
        setUser(session?.user ?? null);
        setLoading(false);
      }
    );

    // THEN check for existing session
    supabase.auth.getSession().then(({ data: { session } }) => {
      setSession(session);
      setUser(session?.user ?? null);
      setLoading(false);
    });

    return () => subscription.unsubscribe();
  }, []);

  const signOut = async () => {
    try {
      await supabase.auth.signOut();
      // navigate('/auth'); // –£–ë–†–ê–ù–û! –ë—É–¥–µ–º –Ω–∞–≤–∏–≥–∏—Ä–æ–≤–∞—Ç—å –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö –í–ù–£–¢–†–ò Router
    } catch (error) {
      console.error('Error signing out:', error);
    }
  };

  return (
    <AuthContext.Provider value={{ user, session, loading, signOut }}>
      {children}
    </AuthContext.Provider>
  );
};

// –ü—Ä–æ—Å—Ç—ã–µ lazy –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const Home = lazy(() => import("./pages/Home"));
const Auth = lazy(() => import("./pages/Auth"));

const PageFallback = () => (
  <div className="min-h-screen flex items-center justify-center bg-background">
    <div className="text-center space-y-4">
      <div className="relative">
        <div className="w-12 h-12 mx-auto rounded-full border-4 border-primary/30 border-t-primary animate-spin" />
        <div className="absolute inset-0 w-12 h-12 mx-auto rounded-full bg-gradient-to-r from-primary/20 to-transparent animate-pulse" />
      </div>
      <p className="text-muted-foreground bg-gradient-to-r from-primary to-primary-dark bg-clip-text text-transparent font-medium">
        –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...
      </p>
    </div>
  </div>
);

const queryClient = new QueryClient({
  defaultOptions: {
    queries: {
      retry: 3,
      staleTime: 5 * 60 * 1000,
    },
  },
});

const App = () => (
  <div style={{
    padding: '20px',
    fontFamily: 'Arial, sans-serif',
    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
    minHeight: '100vh',
    color: 'white'
  }}>
    <h1>üîç –¢–µ—Å—Ç –†–ï–ê–õ–¨–ù–´–• –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤</h1>
    
    <div style={{
      background: 'rgba(255,255,255,0.1)',
      padding: '20px',
      borderRadius: '10px',
      margin: '20px 0'
    }}>
      <h2>üéØ –ß—Ç–æ —Ç–µ—Å—Ç–∏—Ä—É–µ–º:</h2>
      <p>‚úÖ –ù–∞—Å—Ç–æ—è—â–∏–π QueryClient</p>
      <p>‚úÖ –ù–∞—Å—Ç–æ—è—â–∏–π ErrorBoundary</p>
      <p>‚úÖ –ù–∞—Å—Ç–æ—è—â–∏–π BrowserRouter</p>
      <p>‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π AuthProvider (–ë–ï–ó useNavigate)</p>
      <p>‚úÖ –ù–∞—Å—Ç–æ—è—â–∏–π ScrollToTopRouter</p>
      <p>‚úÖ –ù–∞—Å—Ç–æ—è—â–∏–π Layout</p>
      <p>‚úÖ –ù–∞—Å—Ç–æ—è—â–∏–π Suspense + Lazy loading</p>
      <p>‚úÖ –ù–∞—Å—Ç–æ—è—â–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (Home, Auth)</p>
    </div>

    <div style={{
      background: 'rgba(255,255,0,0.1)',
      padding: '15px',
      borderRadius: '10px',
      margin: '20px 0',
      border: '2px solid yellow'
    }}>
      <h3>‚ö†Ô∏è –ù–ê–ô–î–ï–ù–ê –ü–†–û–ë–õ–ï–ú–ê!</h3>
      <p><strong>AuthProvider –∏—Å–ø–æ–ª—å–∑—É–µ—Ç useNavigate() –í–ù–ï BrowserRouter!</strong></p>
      <p>–°—Ç—Ä–æ–∫–∞ 26 –≤ useAuth.tsx: <code>const navigate = useNavigate();</code></p>
      <p>–ù–æ AuthProvider –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –î–û BrowserRouter –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ!</p>
    </div>

    <ErrorBoundary>
      <QueryClientProvider client={queryClient}>
        <Toaster />
        <BrowserRouter>
          <SafeAuthProvider>
            <ScrollToTopRouter />
            <Layout>
              <Suspense fallback={<PageFallback />}>
                <div style={{
                  background: 'rgba(255,255,255,0.1)',
                  padding: '20px',
                  borderRadius: '10px',
                  margin: '20px 0'
                }}>
                  <h3>üìç –†–æ—É—Ç–µ—Ä —Å –Ω–∞—Å—Ç–æ—è—â–∏–º–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏:</h3>
                  
                  <Routes>
                    <Route path="/" element={<Home />} />
                    <Route path="/auth" element={<Auth />} />
                    <Route path="*" element={
                      <div style={{ padding: '20px', background: '#f44336', color: 'white', borderRadius: '10px' }}>
                        <h2>‚ùå 404</h2>
                        <p>–í—Å–µ –Ω–∞—Å—Ç–æ—è—â–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç!</p>
                      </div>
                    } />
                  </Routes>
                </div>
              </Suspense>
            </Layout>
          </SafeAuthProvider>
        </BrowserRouter>
      </QueryClientProvider>
    </ErrorBoundary>

    <div style={{
      background: 'rgba(0,255,0,0.1)',
      padding: '15px',
      borderRadius: '10px',
      margin: '20px 0',
      border: '2px solid green'
    }}>
      <h3>‚úÖ –†–ï–®–ï–ù–ò–ï:</h3>
      <p>1. –£–±—Ä–∞—Ç—å useNavigate() –∏–∑ AuthProvider</p>
      <p>2. –ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏—é –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –í–ù–£–¢–†–ò Router</p>
      <p>3. –ò–ª–∏ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ AuthProvider –í–ù–£–¢–†–¨ BrowserRouter</p>
    </div>
  </div>
);

export default App;