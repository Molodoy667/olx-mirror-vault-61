import React, { useEffect, useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Bell, BellOff, Settings } from 'lucide-react';
import { useAuth } from '@/hooks/useAuth';
import { supabase } from '@/integrations/supabase/client';
import { showSuccessToast, showErrorToast, showInfoToast } from '@/lib/toast-helpers';

interface PushNotificationProps {
  onPermissionGranted?: () => void;
}

export function PushNotifications({ onPermissionGranted }: PushNotificationProps) {
  const [permission, setPermission] = useState<NotificationPermission>('default');
  const [isSupported, setIsSupported] = useState(false);
  const [registration, setRegistration] = useState<ServiceWorkerRegistration | null>(null);
  const { user } = useAuth();

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    setIsSupported('Notification' in window && 'serviceWorker' in navigator);
    
    if ('Notification' in window) {
      setPermission(Notification.permission);
    }

    // –ü–æ–ª—É—á–∞–µ–º Service Worker registration
    if ('serviceWorker' in navigator) {
      navigator.serviceWorker.ready.then((reg) => {
        setRegistration(reg);
      });
    }
  }, []);

  const requestPermission = async () => {
    if (!isSupported) {
      showErrorToast('–ü–æ–º–∏–ª–∫–∞', '–í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î push-—Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è');
      return;
    }

    try {
      // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      const result = await Notification.requestPermission();
      setPermission(result);

      if (result === 'granted') {
        showSuccessToast('–î–æ–∑–≤—ñ–ª –Ω–∞–¥–∞–Ω–æ', 'Push-—Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è —É–≤—ñ–º–∫–Ω–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ');
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–≥–ª–∞—Å–∏–ª—Å—è
        if (user) {
          await supabase
            .from('user_preferences')
            .upsert({
              user_id: user.id,
              push_notifications_enabled: true,
              updated_at: new Date().toISOString()
            });
        }

        // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        await subscribeToPush();
        
        if (onPermissionGranted) {
          onPermissionGranted();
        }
      } else if (result === 'denied') {
        showErrorToast('–î–æ–∑–≤—ñ–ª –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ', 'Push-—Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ. –£–≤—ñ–º–∫–Ω—ñ—Ç—å —ó—Ö —É –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è—Ö –±—Ä–∞—É–∑–µ—Ä–∞.');
      }
    } catch (error) {
      console.error('Error requesting notification permission:', error);
      showErrorToast('–ü–æ–º–∏–ª–∫–∞', '–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø—Ä–æ—Å–∏—Ç–∏ –¥–æ–∑–≤—ñ–ª –Ω–∞ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è');
    }
  };

  const subscribeToPush = async () => {
    if (!registration) {
      console.error('Service Worker not registered');
      return;
    }

    try {
      // –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      const subscription = await registration.pushManager.subscribe({
        userVisibleOnly: true,
        applicationServerKey: urlBase64ToUint8Array(
          'BEl62iUYgUivxIkv69yViEuiBIa6iMjyr2PJNn5_ZgOcQ6M7pOhf6_7VGRJOVHaGJzZfPRpPRJ5QmYrOweRTVE8' // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à VAPID –∫–ª—é—á
        )
      });

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      if (user && subscription) {
        await supabase
          .from('push_subscriptions')
          .upsert({
            user_id: user.id,
            subscription: JSON.stringify(subscription),
            endpoint: subscription.endpoint,
            created_at: new Date().toISOString()
          });

        console.log('Push subscription saved:', subscription);
      }
    } catch (error) {
      console.error('Error subscribing to push:', error);
      showErrorToast('–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–ø–∏—Å–∫–∏', '–ù–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ push-—Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è');
    }
  };

  const unsubscribeFromPush = async () => {
    if (!registration) return;

    try {
      const subscription = await registration.pushManager.getSubscription();
      if (subscription) {
        await subscription.unsubscribe();
        
        // –£–¥–∞–ª—è–µ–º –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        if (user) {
          await supabase
            .from('push_subscriptions')
            .delete()
            .eq('user_id', user.id);
        }

        showInfoToast('–í—ñ–¥–ø–∏—Å–∫–∞', 'Push-—Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤–∏–º–∫–Ω–µ–Ω–æ');
      }
    } catch (error) {
      console.error('Error unsubscribing from push:', error);
      showErrorToast('–ü–æ–º–∏–ª–∫–∞', '–ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è –≤—ñ–¥ —Å–ø–æ–≤—ñ—â–µ–Ω—å');
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  const sendTestNotification = () => {
    if (permission === 'granted') {
      new Notification('üéâ Novado', {
        body: '–ë–µ–∑–ª—ñ—á –æ–≥–æ–ª–æ—à–µ–Ω—å —á–µ–∫–∞—é—Ç—å –Ω–∞ —Ç–µ–±–µ!',
        icon: '/icon.svg',
        badge: '/icon.svg',
        tag: 'test-notification',
        requireInteraction: false,
        actions: [
          {
            action: 'open',
            title: '–í—ñ–¥–∫—Ä–∏—Ç–∏'
          }
        ]
      });
    }
  };

  if (!isSupported) {
    return (
      <Card className="border-amber-200 bg-amber-50 dark:border-amber-800 dark:bg-amber-950">
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <BellOff className="h-5 w-5" />
            Push-—Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ
          </CardTitle>
          <CardDescription>
            –í–∞—à –±—Ä–∞—É–∑–µ—Ä –∞–±–æ –ø—Ä–∏—Å—Ç—Ä—ñ–π –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î push-—Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
          </CardDescription>
        </CardHeader>
      </Card>
    );
  }

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Bell className="h-5 w-5" />
          Push-—Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
        </CardTitle>
        <CardDescription>
          –û—Ç—Ä–∏–º—É–π—Ç–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –Ω–æ–≤—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è —Ç–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        </CardDescription>
      </CardHeader>
      <CardContent className="space-y-4">
        <div className="flex items-center justify-between">
          <div>
            <p className="font-medium">
              –°—Ç–∞—Ç—É—Å: {permission === 'granted' ? '‚úÖ –£–≤—ñ–º–∫–Ω–µ–Ω–æ' : 
                      permission === 'denied' ? '‚ùå –ó–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ' : 
                      '‚è≥ –û—á—ñ–∫—É—î –¥–æ–∑–≤–æ–ª—É'}
            </p>
            <p className="text-sm text-muted-foreground">
              {permission === 'granted' ? '–í–∏ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏–º–µ—Ç–µ push-—Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è' :
               permission === 'denied' ? '–£–≤—ñ–º–∫–Ω—ñ—Ç—å —É –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è—Ö –±—Ä–∞—É–∑–µ—Ä–∞' :
               '–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –¥–ª—è –Ω–∞–¥–∞–Ω–Ω—è –¥–æ–∑–≤–æ–ª—É'}
            </p>
          </div>
          
          <div className="flex gap-2">
            {permission === 'default' && (
              <Button onClick={requestPermission} size="sm">
                <Bell className="h-4 w-4 mr-2" />
                –£–≤—ñ–º–∫–Ω—É—Ç–∏
              </Button>
            )}
            
            {permission === 'granted' && (
              <>
                <Button onClick={sendTestNotification} variant="outline" size="sm">
                  –¢–µ—Å—Ç
                </Button>
                <Button onClick={unsubscribeFromPush} variant="destructive" size="sm">
                  <BellOff className="h-4 w-4 mr-2" />
                  –í–∏–º–∫–Ω—É—Ç–∏
                </Button>
              </>
            )}
            
            {permission === 'denied' && (
              <Button variant="outline" size="sm" onClick={() => {
                showInfoToast('–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è', '–ü–µ—Ä–µ–π–¥—ñ—Ç—å —É –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±—Ä–∞—É–∑–µ—Ä–∞ ‚Üí –°–∞–π—Ç–∏ ‚Üí Novado ‚Üí –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è ‚Üí –î–æ–∑–≤–æ–ª–∏—Ç–∏');
              }}>
                <Settings className="h-4 w-4 mr-2" />
                –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
              </Button>
            )}
          </div>
        </div>

        {permission === 'granted' && (
          <div className="p-3 bg-green-50 dark:bg-green-950 rounded-lg border border-green-200 dark:border-green-800">
            <p className="text-sm text-green-700 dark:text-green-300">
              üîî Push-—Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω—ñ! –í–∏ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏–º–µ—Ç–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ:
            </p>
            <ul className="text-sm text-green-600 dark:text-green-400 mt-2 space-y-1">
              <li>‚Ä¢ –ù–æ–≤—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –ø–æ–∫—É–ø—Ü—ñ–≤</li>
              <li>‚Ä¢ –í—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –≤–∞—à—ñ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è</li>
              <li>‚Ä¢ –í–∞–∂–ª–∏–≤—ñ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏</li>
              <li>‚Ä¢ –ù–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó Novado</li>
            </ul>
          </div>
        )}
      </CardContent>
    </Card>
  );
}

// Utility function –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ VAPID –∫–ª—é—á–∞
function urlBase64ToUint8Array(base64String: string): Uint8Array {
  const padding = '='.repeat((4 - base64String.length % 4) % 4);
  const base64 = (base64String + padding)
    .replace(/-/g, '+')
    .replace(/_/g, '/');

  const rawData = window.atob(base64);
  const outputArray = new Uint8Array(rawData.length);

  for (let i = 0; i < rawData.length; ++i) {
    outputArray[i] = rawData.charCodeAt(i);
  }
  return outputArray;
}