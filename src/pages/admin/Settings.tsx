import { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { useAdmin } from '@/hooks/useAdmin';
import { supabase } from '@/integrations/supabase/client';
import { AdminHeader } from '@/components/admin/AdminHeader';
import { AdminSidebar } from '@/components/admin/AdminSidebar';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Switch } from '@/components/ui/switch';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Textarea } from '@/components/ui/textarea';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { toast } from '@/hooks/use-toast';
import { 
  Settings as SettingsIcon, 
  Save, 
  Globe, 
  Shield, 
  Mail,
  Database,
  Palette,
  Bell,
  FileImage,
  Link,
  RefreshCw
} from 'lucide-react';

interface SystemSettings {
  site_name: string;
  site_description: string;
  contact_email: string;
  max_images_per_listing: number;
  auto_approve_listings: boolean;
  maintenance_mode: boolean;
  registration_enabled: boolean;
  email_notifications: boolean;
  default_currency: string;
  max_listing_price: number;
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è SEO URL
function SeoManagementSection() {
  const [regenerating, setRegenerating] = useState(false);
  const [stats, setStats] = useState<{ total: number; withSeo: number } | null>(null);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É SEO URL
  const loadSeoStats = async () => {
    try {
      const [listingsResult, seoUrlsResult] = await Promise.all([
        supabase.from('listings').select('id', { count: 'exact' }).eq('status', 'active'),
        supabase.from('seo_urls').select('id', { count: 'exact' })
      ]);

      setStats({
        total: listingsResult.count || 0,
        withSeo: seoUrlsResult.count || 0
      });
    } catch (error) {
      console.error('Error loading SEO stats:', error);
    }
  };

  // –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –≤—Å–µ—Ö SEO URL
  const handleRegenerateAll = async () => {
    setRegenerating(true);
    try {
      const { regenerateAllSeoUrls } = await import('@/lib/seo');
      const result = await regenerateAllSeoUrls();
      
      toast({
        title: "SEO URL –æ–Ω–æ–≤–ª–µ–Ω–æ",
        description: `–£—Å–ø—ñ—à–Ω–æ: ${result.success}, –ü–æ–º–∏–ª–æ–∫: ${result.errors}`,
        variant: result.errors > 0 ? "destructive" : "default"
      });
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
      await loadSeoStats();
    } catch (error) {
      toast({
        title: "–ü–æ–º–∏–ª–∫–∞",
        description: "–ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ SEO URL",
        variant: "destructive"
      });
    } finally {
      setRegenerating(false);
    }
  };

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    loadSeoStats();
  }, []);

  return (
    <div className="space-y-4">
      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="grid grid-cols-2 gap-4">
        <div className="bg-green-50 dark:bg-green-950/30 p-4 rounded-lg border border-green-200 dark:border-green-800">
          <h5 className="font-semibold text-green-900 dark:text-green-100">–ê–∫—Ç–∏–≤–Ω–∏—Ö –æ–≥–æ–ª–æ—à–µ–Ω—å</h5>
          <p className="text-2xl font-bold text-green-700 dark:text-green-300">
            {stats?.total ?? '...'}
          </p>
        </div>
        
        <div className="bg-blue-50 dark:bg-blue-950/30 p-4 rounded-lg border border-blue-200 dark:border-blue-800">
          <h5 className="font-semibold text-blue-900 dark:text-blue-100">–ó SEO URL</h5>
          <p className="text-2xl font-bold text-blue-700 dark:text-blue-300">
            {stats?.withSeo ?? '...'}
          </p>
        </div>
      </div>

      {/* –î–µ–π—Å—Ç–≤–∏—è */}
      <div className="space-y-3">
        <div className="bg-amber-50 dark:bg-amber-950/30 p-4 rounded-lg border border-amber-200 dark:border-amber-800">
          <h5 className="font-semibold text-amber-900 dark:text-amber-100 mb-2">
            ‚ö†Ô∏è –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–Ω—è –≤—Å—ñ—Ö SEO URL
          </h5>
          <p className="text-sm text-amber-800 dark:text-amber-200 mb-3">
            –¶–µ –≤–∏–¥–∞–ª–∏—Ç—å –≤—Å—ñ —ñ—Å–Ω—É—é—á—ñ SEO URL —Ç–∞ —Å—Ç–≤–æ—Ä–∏—Ç—å –Ω–æ–≤—ñ –∑ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º —Ñ–æ—Ä–º–∞—Ç–æ–º.
            –°—Ç–∞—Ä—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –ø–µ—Ä–µ—Å—Ç–∞–Ω—É—Ç—å –ø—Ä–∞—Ü—é–≤–∞—Ç–∏!
          </p>
          <Button 
            onClick={handleRegenerateAll}
            disabled={regenerating}
            variant="destructive"
            className="w-full"
          >
            {regenerating ? (
              <>
                <RefreshCw className="w-4 h-4 mr-2 animate-spin" />
                –û–Ω–æ–≤–ª–µ–Ω–Ω—è...
              </>
            ) : (
              <>
                <RefreshCw className="w-4 h-4 mr-2" />
                –ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç–∏ –≤—Å—ñ SEO URL
              </>
            )}
          </Button>
        </div>

        <Button 
          onClick={loadSeoStats}
          variant="outline"
          className="w-full"
        >
          üîÑ –û–Ω–æ–≤–∏—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        </Button>
      </div>
    </div>
  );
}

export default function AdminSettings() {
  const navigate = useNavigate();
  const { isAdmin, loading } = useAdmin();
  
  // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏
  const [settings, setSettings] = useState<SystemSettings>({
    site_name: '–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å',
    site_description: '–ù–∞–π–∫—Ä–∞—â–∏–π –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å –£–∫—Ä–∞—ó–Ω–∏',
    contact_email: 'admin@marketplace.ua',
    max_images_per_listing: 10,
    auto_approve_listings: true,
    maintenance_mode: false,
    registration_enabled: true,
    email_notifications: true,
    default_currency: 'UAH',
    max_listing_price: 1000000
  });

  const [saving, setSaving] = useState(false);
  const [activeTab, setActiveTab] = useState('general');

  useEffect(() => {
    if (!loading && !isAdmin) {
      navigate('/');
    }
  }, [isAdmin, loading, navigate]);

  // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –∞–±–æ localStorage
  useEffect(() => {
    loadSettings();
  }, []);

  const loadSettings = async () => {
    // –¢—É—Ç –º–æ–∂–Ω–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    // –ü–æ–∫–∏ —â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ localStorage –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó
    const savedSettings = localStorage.getItem('admin_settings');
    if (savedSettings) {
      setSettings(JSON.parse(savedSettings));
    }
  };

  const saveSettings = async () => {
    setSaving(true);
    try {
      // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ localStorage (–≤ —Ä–µ–∞–ª—å–Ω–æ–º—É –¥–æ–¥–∞—Ç–∫—É - –≤ –ë–î)
      localStorage.setItem('admin_settings', JSON.stringify(settings));
      
      toast({
        title: "–£—Å–ø—ñ—à–Ω–æ",
        description: "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ",
      });
    } catch (error) {
      toast({
        title: "–ü–æ–º–∏–ª–∫–∞", 
        description: "–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–±–µ—Ä–µ–≥—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è",
        variant: "destructive",
      });
    } finally {
      setSaving(false);
    }
  };

  const resetSettings = () => {
    if (confirm('–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ —Å–∫–∏–Ω—É—Ç–∏ –≤—Å—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è?')) {
      localStorage.removeItem('admin_settings');
      window.location.reload();
    }
  };

  // –û–±—Ä–æ–±–Ω–∏–∫ –∑–º—ñ–Ω–∏ –∑–Ω–∞—á–µ–Ω—å
  const handleSettingChange = (key: keyof SystemSettings, value: any) => {
    setSettings(prev => ({
      ...prev,
      [key]: value
    }));
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-background flex items-center justify-center">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary"></div>
      </div>
    );
  }

  if (!isAdmin) return null;

  return (
    <div className="min-h-screen bg-background">
      <AdminHeader />
      
      <div className="flex">
        <div className="hidden lg:block">
          <AdminSidebar />
        </div>
        
        <main className="flex-1 p-4 md:p-6 lg:p-8">
          <div className="mb-6">
            <h1 className="text-2xl md:text-3xl font-bold bg-gradient-to-r from-primary to-primary-dark bg-clip-text text-transparent">
              –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏
            </h1>
            <p className="text-muted-foreground mt-1">
              –ö–µ—Ä—É–π—Ç–µ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—î—é –≤–∞—à–æ–≥–æ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—É
            </p>
          </div>

          <div className="space-y-6">
            {/* –ö–Ω–æ–ø–∫–∏ –¥—ñ–π */}
            <div className="flex flex-col sm:flex-row gap-3 justify-between">
              <div className="flex flex-wrap gap-2">
                <Button
                  onClick={saveSettings}
                  disabled={saving}
                  className="bg-gradient-to-r from-primary to-primary-dark hover:shadow-glow"
                >
                  <Save className="w-4 h-4 mr-2" />
                  {saving ? '–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è...' : '–ó–±–µ—Ä–µ–≥—Ç–∏ –∑–º—ñ–Ω–∏'}
                </Button>
                <Button
                  variant="outline"
                  onClick={resetSettings}
                >
                  –°–∫–∏–Ω—É—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
                </Button>
              </div>
            </div>

            {/* –í–∫–ª–∞–¥–∫–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å */}
            <Tabs value={activeTab} onValueChange={setActiveTab}>
              <TabsList className="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-5 w-full">
                <TabsTrigger value="general" className="flex items-center gap-2">
                  <Globe className="w-4 h-4" />
                  <span className="hidden sm:inline">–ó–∞–≥–∞–ª—å–Ω—ñ</span>
                </TabsTrigger>
                <TabsTrigger value="security" className="flex items-center gap-2">
                  <Shield className="w-4 h-4" />
                  <span className="hidden sm:inline">–ë–µ–∑–ø–µ–∫–∞</span>
                </TabsTrigger>
                <TabsTrigger value="notifications" className="flex items-center gap-2">
                  <Bell className="w-4 h-4" />
                  <span className="hidden sm:inline">–°–ø–æ–≤—ñ—â–µ–Ω–Ω—è</span>
                </TabsTrigger>
                <TabsTrigger value="media" className="flex items-center gap-2">
                  <FileImage className="w-4 h-4" />
                  <span className="hidden sm:inline">–ú–µ–¥—ñ–∞</span>
                </TabsTrigger>
                <TabsTrigger value="seo" className="flex items-center gap-2">
                  <Link className="w-4 h-4" />
                  <span className="hidden sm:inline">SEO URL</span>
                </TabsTrigger>
                <TabsTrigger value="appearance" className="flex items-center gap-2">
                  <Palette className="w-4 h-4" />
                  <span className="hidden sm:inline">–í–∏–≥–ª—è–¥</span>
                </TabsTrigger>
              </TabsList>

              {/* –ó–∞–≥–∞–ª—å–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è */}
              <TabsContent value="general" className="space-y-6">
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                      <Globe className="w-5 h-5" />
                      –û—Å–Ω–æ–≤–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–∞–π—Ç—É
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      <div className="space-y-2">
                        <Label htmlFor="site-name">–ù–∞–∑–≤–∞ —Å–∞–π—Ç—É</Label>
                        <Input
                          id="site-name"
                          value={settings.site_name}
                          onChange={(e) => handleSettingChange('site_name', e.target.value)}
                          placeholder="–ù–∞–∑–≤–∞ –≤–∞—à–æ–≥–æ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—É"
                        />
                      </div>
                      <div className="space-y-2">
                        <Label htmlFor="contact-email">Email –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤</Label>
                        <Input
                          id="contact-email"
                          type="email"
                          value={settings.contact_email}
                          onChange={(e) => handleSettingChange('contact_email', e.target.value)}
                          placeholder="admin@example.com"
                        />
                      </div>
                    </div>
                    
                    <div className="space-y-2">
                      <Label htmlFor="site-description">–û–ø–∏—Å —Å–∞–π—Ç—É</Label>
                      <Textarea
                        id="site-description"
                        value={settings.site_description}
                        onChange={(e) => handleSettingChange('site_description', e.target.value)}
                        placeholder="–ö–æ—Ä–æ—Ç–∫–∏–π –æ–ø–∏—Å –≤–∞—à–æ–≥–æ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—É"
                        rows={3}
                      />
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      <div className="space-y-2">
                        <Label htmlFor="default-currency">–í–∞–ª—é—Ç–∞ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º</Label>
                        <Select
                          value={settings.default_currency}
                          onValueChange={(value) => handleSettingChange('default_currency', value)}
                        >
                          <SelectTrigger>
                            <SelectValue />
                          </SelectTrigger>
                          <SelectContent>
                            <SelectItem value="UAH">–ì—Ä–∏–≤–Ω—è (UAH)</SelectItem>
                            <SelectItem value="USD">–î–æ–ª–∞—Ä –°–®–ê (USD)</SelectItem>
                            <SelectItem value="EUR">–Ñ–≤—Ä–æ (EUR)</SelectItem>
                          </SelectContent>
                        </Select>
                      </div>
                      <div className="space-y-2">
                        <Label htmlFor="max-price">–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è</Label>
                        <Input
                          id="max-price"
                          type="number"
                          value={settings.max_listing_price}
                          onChange={(e) => handleSettingChange('max_listing_price', Number(e.target.value))}
                          placeholder="1000000"
                        />
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </TabsContent>

              {/* –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–µ–∑–ø–µ–∫–∏ */}
              <TabsContent value="security" className="space-y-6">
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                      <Shield className="w-5 h-5" />
                      –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–µ–∑–ø–µ–∫–∏ —Ç–∞ –º–æ–¥–µ—Ä–∞—Ü—ñ—ó
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-6">
                    <div className="flex items-center justify-between">
                      <div className="space-y-0.5">
                        <Label>–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ —Å—Ö–≤–∞–ª–µ–Ω–Ω—è –æ–≥–æ–ª–æ—à–µ–Ω—å</Label>
                        <p className="text-sm text-muted-foreground">
                          –û–≥–æ–ª–æ—à–µ–Ω–Ω—è –±—É–¥—É—Ç—å –ø—É–±–ª—ñ–∫—É–≤–∞—Ç–∏—Å—è –±–µ–∑ –º–æ–¥–µ—Ä–∞—Ü—ñ—ó
                        </p>
                      </div>
                      <Switch
                        checked={settings.auto_approve_listings}
                        onCheckedChange={(checked) => handleSettingChange('auto_approve_listings', checked)}
                      />
                    </div>

                    <div className="flex items-center justify-between">
                      <div className="space-y-0.5">
                        <Label>–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –Ω–æ–≤–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤</Label>
                        <p className="text-sm text-muted-foreground">
                          –î–æ–∑–≤–æ–ª–∏—Ç–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –Ω–æ–≤–∏—Ö –∞–∫–∞—É–Ω—Ç—ñ–≤
                        </p>
                      </div>
                      <Switch
                        checked={settings.registration_enabled}
                        onCheckedChange={(checked) => handleSettingChange('registration_enabled', checked)}
                      />
                    </div>

                    <div className="flex items-center justify-between">
                      <div className="space-y-0.5">
                        <Label>–†–µ–∂–∏–º –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è</Label>
                        <p className="text-sm text-muted-foreground">
                          –¢–∏–º—á–∞—Å–æ–≤–æ –∑–∞–∫—Ä–∏—Ç–∏ —Å–∞–π—Ç –¥–ª—è –≤—ñ–¥–≤—ñ–¥—É–≤–∞—á—ñ–≤
                        </p>
                      </div>
                      <Switch
                        checked={settings.maintenance_mode}
                        onCheckedChange={(checked) => handleSettingChange('maintenance_mode', checked)}
                      />
                    </div>
                  </CardContent>
                </Card>
              </TabsContent>

              {/* –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω—å */}
              <TabsContent value="notifications" className="space-y-6">
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                      <Mail className="w-5 h-5" />
                      –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω—å
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-6">
                    <div className="flex items-center justify-between">
                      <div className="space-y-0.5">
                        <Label>Email-—Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è</Label>
                        <p className="text-sm text-muted-foreground">
                          –ù–∞–¥—Å–∏–ª–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –Ω–∞ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –ø–æ—à—Ç—É
                        </p>
                      </div>
                      <Switch
                        checked={settings.email_notifications}
                        onCheckedChange={(checked) => handleSettingChange('email_notifications', checked)}
                      />
                    </div>
                  </CardContent>
                </Card>
              </TabsContent>

              {/* –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–µ–¥—ñ–∞ */}
              <TabsContent value="media" className="space-y-6">
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                      <FileImage className="w-5 h-5" />
                      –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω—å —Ç–∞ —Ñ–∞–π–ª—ñ–≤
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div className="space-y-2">
                      <Label htmlFor="max-images">–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–æ–±—Ä–∞–∂–µ–Ω—å –≤ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—ñ</Label>
                      <Input
                        id="max-images"
                        type="number"
                        value={settings.max_images_per_listing}
                        onChange={(e) => handleSettingChange('max_images_per_listing', Number(e.target.value))}
                        min="1"
                        max="20"
                      />
                      <p className="text-sm text-muted-foreground">
                        –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–æ: 5-10 –∑–æ–±—Ä–∞–∂–µ–Ω—å
                      </p>
                    </div>
                  </CardContent>
                </Card>
              </TabsContent>

              {/* SEO —Ç–∞ URL –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è */}
              <TabsContent value="seo" className="space-y-6">
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                      <Link className="w-5 h-5" />
                      –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è SEO URL
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-6">
                    <div className="bg-blue-50 dark:bg-blue-950/30 p-4 rounded-lg border border-blue-200 dark:border-blue-800">
                      <h4 className="font-semibold text-blue-900 dark:text-blue-100 mb-2">
                        –§–æ—Ä–º–∞—Ç SEO URL
                      </h4>
                      <p className="text-sm text-blue-800 dark:text-blue-200 mb-3">
                        –ü—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç: <code className="bg-blue-100 dark:bg-blue-900 px-2 py-1 rounded">/seo-slug-LISTINGID</code>
                      </p>
                      <p className="text-sm text-blue-700 dark:text-blue-300">
                        –ü—Ä–∏–∫–ª–∞–¥: <code className="bg-blue-100 dark:bg-blue-900 px-2 py-1 rounded">/prodazh-iphone-A1B2C3D4</code>
                      </p>
                    </div>

                    <SeoManagementSection />
                  </CardContent>
                </Card>
              </TabsContent>

              {/* –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–æ–≤–Ω—ñ—à–Ω—å–æ–≥–æ –≤–∏–≥–ª—è–¥—É */}
              <TabsContent value="appearance" className="space-y-6">
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                      <Palette className="w-5 h-5" />
                      –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–æ–≤–Ω—ñ—à–Ω—å–æ–≥–æ –≤–∏–≥–ª—è–¥—É
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <p className="text-muted-foreground">
                      –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ–ª—å–æ—Ä–æ–≤–æ—ó —Å—Ö–µ–º–∏ —Ç–∞ –ª–æ–≥–æ—Ç–∏–ø—É –±—É–¥—É—Ç—å –¥–æ–¥–∞–Ω—ñ –≤ –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö –≤–µ—Ä—Å—ñ—è—Ö.
                    </p>
                  </CardContent>
                </Card>
              </TabsContent>
            </Tabs>

            {/* –°—Ç–∞—Ç—É—Å –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è */}
            {saving && (
              <Card>
                <CardContent className="p-4">
                  <div className="flex items-center gap-3">
                    <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-primary"></div>
                    <span className="text-sm">–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å...</span>
                  </div>
                </CardContent>
              </Card>
            )}
          </div>
        </main>
      </div>
    </div>
  );
}