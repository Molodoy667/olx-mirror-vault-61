import { StrictMode } from 'react'
import { createRoot } from 'react-dom/client'

// –ü—Ä–æ—Å—Ç–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
function DebugApp() {
  return (
    <div style={{ 
      padding: '20px', 
      fontFamily: 'Arial, sans-serif',
      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
      minHeight: '100vh',
      color: 'white'
    }}>
      <h1>üîç Debug Mode - OLX</h1>
      <div style={{ 
        background: 'rgba(255,255,255,0.1)', 
        padding: '20px', 
        borderRadius: '10px',
        margin: '20px 0'
      }}>
        <h2>‚úÖ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!</h2>
        <p><strong>–í—Ä–µ–º—è:</strong> {new Date().toLocaleString()}</p>
        <p><strong>URL:</strong> {window.location.href}</p>
        <p><strong>User Agent:</strong> {navigator.userAgent.substring(0, 50)}...</p>
      </div>
      
      <div style={{ 
        background: 'rgba(255,255,255,0.1)', 
        padding: '20px', 
        borderRadius: '10px',
        margin: '20px 0'
      }}>
        <h3>üß™ –ë–∞–∑–æ–≤—ã–µ —Ç–µ—Å—Ç—ã:</h3>
        <p>‚úÖ JSX —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è</p>
        <p>‚úÖ CSS —Å—Ç–∏–ª–∏ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è</p>
        <p>‚úÖ JavaScript —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç</p>
        <p>‚úÖ React hooks –¥–æ—Å—Ç—É–ø–Ω—ã</p>
      </div>

      <div style={{ 
        background: 'rgba(255,255,255,0.1)', 
        padding: '20px', 
        borderRadius: '10px',
        margin: '20px 0'
      }}>
        <h3>üîß –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:</h3>
        <p>1. –ï—Å–ª–∏ –≤–∏–¥–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ - –æ—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ –ù–ï –≤ React</p>
        <p>2. –ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤:</p>
        <ul>
          <li>–û—à–∏–±–∫–µ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö App.tsx</li>
          <li>–ü—Ä–æ–±–ª–µ–º–µ —Å —Ä–æ—É—Ç–∏–Ω–≥–æ–º</li>
          <li>–û—à–∏–±–∫–µ –≤ Supabase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏</li>
          <li>–ü—Ä–æ–±–ª–µ–º–µ —Å lazy loading –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤</li>
        </ul>
        
        <button 
          onClick={() => {
            console.log('üîÑ –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ–ª–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...');
            // –ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ–ª–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            import('./App.tsx').then(AppModule => {
              console.log('‚úÖ App.tsx –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ');
            }).catch(error => {
              console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ App.tsx:', error);
            });
          }}
          style={{
            background: '#4CAF50',
            color: 'white',
            border: 'none',
            padding: '10px 20px',
            borderRadius: '5px',
            cursor: 'pointer',
            margin: '10px'
          }}
        >
          –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ App.tsx
        </button>
      </div>
    </div>
  );
}

// –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
try {
  console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
  
  const rootElement = document.getElementById("root");
  if (!rootElement) {
    throw new Error('Element with id "root" not found');
  }
  
  console.log('‚úÖ Root element –Ω–∞–π–¥–µ–Ω');
  
  const root = createRoot(rootElement);
  console.log('‚úÖ React root —Å–æ–∑–¥–∞–Ω');
  
  root.render(
    <StrictMode>
      <DebugApp />
    </StrictMode>
  );
  
  console.log('‚úÖ Debug –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω–æ');
  
} catch (error) {
  console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
  
  // Fallback - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –≤ HTML
  const rootElement = document.getElementById("root");
  if (rootElement) {
    rootElement.innerHTML = `
      <div style="padding: 20px; font-family: Arial; background: #ffebee; color: #c62828; border-radius: 5px; margin: 20px;">
        <h1>‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ React</h1>
        <p><strong>–û—à–∏–±–∫–∞:</strong> ${error.message}</p>
        <p><strong>–°—Ç–µ–∫:</strong> ${error.stack}</p>
        <button onclick="window.location.reload()" style="background: #d32f2f; color: white; border: none; padding: 10px 20px; border-radius: 5px; cursor: pointer;">
          –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
        </button>
      </div>
    `;
  }
}