// Database Helper Script
// –ó–∞–ø—É—Å–∫: node db-helper.js

import { createClient } from '@supabase/supabase-js';

// –í–ù–ò–ú–ê–ù–ò–ï: –î–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase
const SUPABASE_URL = process.env.VITE_SUPABASE_URL || 'YOUR_SUPABASE_URL';
const SUPABASE_SERVICE_KEY = process.env.SUPABASE_SERVICE_ROLE_KEY || 'YOUR_SERVICE_KEY';

const supabase = createClient(SUPABASE_URL, SUPABASE_SERVICE_KEY);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL –∑–∞–ø—Ä–æ—Å–æ–≤
async function runSQL(query) {
  console.log('üîç –í—ã–ø–æ–ª–Ω—è—é –∑–∞–ø—Ä–æ—Å:', query);
  
  try {
    const { data, error } = await supabase.rpc('execute_sql', { query });
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞:', error);
      return null;
    }
    
    console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç:', data);
    return data;
  } catch (err) {
    console.error('üí• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ:', err);
    return null;
  }
}

// –ë—ã—Å—Ç—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö
async function getTableStats() {
  const query = `
    SELECT 
      schemaname,
      tablename,
      n_tup_ins as inserts,
      n_tup_upd as updates,
      n_tup_del as deletes,
      n_live_tup as live_rows
    FROM pg_stat_user_tables 
    ORDER BY n_live_tup DESC;
  `;
  
  return await runSQL(query);
}

async function getTopUsers() {
  const { data, error } = await supabase
    .from('profiles')
    .select('id, email, created_at')
    .order('created_at', { ascending: false })
    .limit(10);
    
  if (error) {
    console.error('‚ùå', error);
    return null;
  }
  
  console.log('üë• –¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:', data);
  return data;
}

async function getListingsStats() {
  const { data, error } = await supabase
    .from('listings')
    .select('status, count(*)')
    .group('status');
    
  if (error) {
    console.error('‚ùå', error);
    return null;
  }
  
  console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π:', data);
  return data;
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  console.log('üöÄ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...\n');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
  const { data: connection } = await supabase.from('listings').select('count').limit(1);
  if (!connection) {
    console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ë–î');
    return;
  }
  
  console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!\n');
  
  console.log('üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –¢–ê–ë–õ–ò–¶:');
  await getTableStats();
  
  console.log('\nüë• –¢–û–ü –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò:');
  await getTopUsers();
  
  console.log('\nüìã –°–¢–ê–¢–ò–°–¢–ò–ö–ê –û–ë–™–Ø–í–õ–ï–ù–ò–ô:');
  await getListingsStats();
}

// –ó–∞–ø—É—Å–∫
if (import.meta.url === `file://${process.argv[1]}`) {
  main().catch(console.error);
}

export { runSQL, getTableStats, getTopUsers, getListingsStats };